// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlockTag int32

const (
	BlockTag_Latest   BlockTag = 0
	BlockTag_Earliest BlockTag = 1
)

var BlockTag_name = map[int32]string{
	0: "Latest",
	1: "Earliest",
}
var BlockTag_value = map[string]int32{
	"Latest":   0,
	"Earliest": 1,
}

func (x BlockTag) String() string {
	return proto.EnumName(BlockTag_name, int32(x))
}
func (BlockTag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_request_f968eedce0803cfb, []int{0}
}

type Call struct {
	From                 []byte   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   []byte   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Height               string   `protobuf:"bytes,4,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_f968eedce0803cfb, []int{0}
}
func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (dst *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(dst, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Call) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Call) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Call) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

type Request struct {
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Req:
	//	*Request_BlockNumber
	//	*Request_BlockByHash
	//	*Request_BlockByHeight
	//	*Request_Transaction
	//	*Request_Height
	//	*Request_Peercount
	//	*Request_Call
	//	*Request_Filter
	//	*Request_TransactionReceipt
	//	*Request_TransactionCount
	//	*Request_Code
	//	*Request_Abi
	//	*Request_NewFilter
	//	*Request_NewBlockFilter
	//	*Request_UninstallFilter
	//	*Request_FilterChanges
	//	*Request_FilterLogs
	//	*Request_UnTx
	//	*Request_BatchReq
	//	*Request_TransactionProof
	//	*Request_MetaData
	//	*Request_Balance
	Req                  isRequest_Req `protobuf_oneof:"req"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_f968eedce0803cfb, []int{1}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type isRequest_Req interface {
	isRequest_Req()
}

type Request_BlockNumber struct {
	BlockNumber bool `protobuf:"varint,2,opt,name=block_number,json=blockNumber,oneof"`
}
type Request_BlockByHash struct {
	BlockByHash string `protobuf:"bytes,3,opt,name=block_by_hash,json=blockByHash,oneof"`
}
type Request_BlockByHeight struct {
	BlockByHeight string `protobuf:"bytes,4,opt,name=block_by_height,json=blockByHeight,oneof"`
}
type Request_Transaction struct {
	Transaction []byte `protobuf:"bytes,5,opt,name=transaction,proto3,oneof"`
}
type Request_Height struct {
	Height uint64 `protobuf:"varint,6,opt,name=height,oneof"`
}
type Request_Peercount struct {
	Peercount bool `protobuf:"varint,7,opt,name=peercount,oneof"`
}
type Request_Call struct {
	Call *Call `protobuf:"bytes,8,opt,name=call,oneof"`
}
type Request_Filter struct {
	Filter string `protobuf:"bytes,9,opt,name=filter,oneof"`
}
type Request_TransactionReceipt struct {
	TransactionReceipt []byte `protobuf:"bytes,10,opt,name=transaction_receipt,json=transactionReceipt,proto3,oneof"`
}
type Request_TransactionCount struct {
	TransactionCount string `protobuf:"bytes,11,opt,name=transaction_count,json=transactionCount,oneof"`
}
type Request_Code struct {
	Code string `protobuf:"bytes,12,opt,name=code,oneof"`
}
type Request_Abi struct {
	Abi string `protobuf:"bytes,13,opt,name=abi,oneof"`
}
type Request_NewFilter struct {
	NewFilter string `protobuf:"bytes,14,opt,name=new_filter,json=newFilter,oneof"`
}
type Request_NewBlockFilter struct {
	NewBlockFilter bool `protobuf:"varint,15,opt,name=new_block_filter,json=newBlockFilter,oneof"`
}
type Request_UninstallFilter struct {
	UninstallFilter uint64 `protobuf:"varint,16,opt,name=uninstall_filter,json=uninstallFilter,oneof"`
}
type Request_FilterChanges struct {
	FilterChanges uint64 `protobuf:"varint,17,opt,name=filter_changes,json=filterChanges,oneof"`
}
type Request_FilterLogs struct {
	FilterLogs uint64 `protobuf:"varint,18,opt,name=filter_logs,json=filterLogs,oneof"`
}
type Request_UnTx struct {
	UnTx *UnverifiedTransaction `protobuf:"bytes,19,opt,name=un_tx,json=unTx,oneof"`
}
type Request_BatchReq struct {
	BatchReq *BatchRequest `protobuf:"bytes,20,opt,name=batch_req,json=batchReq,oneof"`
}
type Request_TransactionProof struct {
	TransactionProof []byte `protobuf:"bytes,21,opt,name=transaction_proof,json=transactionProof,proto3,oneof"`
}
type Request_MetaData struct {
	MetaData string `protobuf:"bytes,22,opt,name=meta_data,json=metaData,oneof"`
}
type Request_Balance struct {
	Balance string `protobuf:"bytes,23,opt,name=balance,oneof"`
}

func (*Request_BlockNumber) isRequest_Req()        {}
func (*Request_BlockByHash) isRequest_Req()        {}
func (*Request_BlockByHeight) isRequest_Req()      {}
func (*Request_Transaction) isRequest_Req()        {}
func (*Request_Height) isRequest_Req()             {}
func (*Request_Peercount) isRequest_Req()          {}
func (*Request_Call) isRequest_Req()               {}
func (*Request_Filter) isRequest_Req()             {}
func (*Request_TransactionReceipt) isRequest_Req() {}
func (*Request_TransactionCount) isRequest_Req()   {}
func (*Request_Code) isRequest_Req()               {}
func (*Request_Abi) isRequest_Req()                {}
func (*Request_NewFilter) isRequest_Req()          {}
func (*Request_NewBlockFilter) isRequest_Req()     {}
func (*Request_UninstallFilter) isRequest_Req()    {}
func (*Request_FilterChanges) isRequest_Req()      {}
func (*Request_FilterLogs) isRequest_Req()         {}
func (*Request_UnTx) isRequest_Req()               {}
func (*Request_BatchReq) isRequest_Req()           {}
func (*Request_TransactionProof) isRequest_Req()   {}
func (*Request_MetaData) isRequest_Req()           {}
func (*Request_Balance) isRequest_Req()            {}

func (m *Request) GetReq() isRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *Request) GetRequestId() []byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *Request) GetBlockNumber() bool {
	if x, ok := m.GetReq().(*Request_BlockNumber); ok {
		return x.BlockNumber
	}
	return false
}

func (m *Request) GetBlockByHash() string {
	if x, ok := m.GetReq().(*Request_BlockByHash); ok {
		return x.BlockByHash
	}
	return ""
}

func (m *Request) GetBlockByHeight() string {
	if x, ok := m.GetReq().(*Request_BlockByHeight); ok {
		return x.BlockByHeight
	}
	return ""
}

func (m *Request) GetTransaction() []byte {
	if x, ok := m.GetReq().(*Request_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (m *Request) GetHeight() uint64 {
	if x, ok := m.GetReq().(*Request_Height); ok {
		return x.Height
	}
	return 0
}

func (m *Request) GetPeercount() bool {
	if x, ok := m.GetReq().(*Request_Peercount); ok {
		return x.Peercount
	}
	return false
}

func (m *Request) GetCall() *Call {
	if x, ok := m.GetReq().(*Request_Call); ok {
		return x.Call
	}
	return nil
}

func (m *Request) GetFilter() string {
	if x, ok := m.GetReq().(*Request_Filter); ok {
		return x.Filter
	}
	return ""
}

func (m *Request) GetTransactionReceipt() []byte {
	if x, ok := m.GetReq().(*Request_TransactionReceipt); ok {
		return x.TransactionReceipt
	}
	return nil
}

func (m *Request) GetTransactionCount() string {
	if x, ok := m.GetReq().(*Request_TransactionCount); ok {
		return x.TransactionCount
	}
	return ""
}

func (m *Request) GetCode() string {
	if x, ok := m.GetReq().(*Request_Code); ok {
		return x.Code
	}
	return ""
}

func (m *Request) GetAbi() string {
	if x, ok := m.GetReq().(*Request_Abi); ok {
		return x.Abi
	}
	return ""
}

func (m *Request) GetNewFilter() string {
	if x, ok := m.GetReq().(*Request_NewFilter); ok {
		return x.NewFilter
	}
	return ""
}

func (m *Request) GetNewBlockFilter() bool {
	if x, ok := m.GetReq().(*Request_NewBlockFilter); ok {
		return x.NewBlockFilter
	}
	return false
}

func (m *Request) GetUninstallFilter() uint64 {
	if x, ok := m.GetReq().(*Request_UninstallFilter); ok {
		return x.UninstallFilter
	}
	return 0
}

func (m *Request) GetFilterChanges() uint64 {
	if x, ok := m.GetReq().(*Request_FilterChanges); ok {
		return x.FilterChanges
	}
	return 0
}

func (m *Request) GetFilterLogs() uint64 {
	if x, ok := m.GetReq().(*Request_FilterLogs); ok {
		return x.FilterLogs
	}
	return 0
}

func (m *Request) GetUnTx() *UnverifiedTransaction {
	if x, ok := m.GetReq().(*Request_UnTx); ok {
		return x.UnTx
	}
	return nil
}

func (m *Request) GetBatchReq() *BatchRequest {
	if x, ok := m.GetReq().(*Request_BatchReq); ok {
		return x.BatchReq
	}
	return nil
}

func (m *Request) GetTransactionProof() []byte {
	if x, ok := m.GetReq().(*Request_TransactionProof); ok {
		return x.TransactionProof
	}
	return nil
}

func (m *Request) GetMetaData() string {
	if x, ok := m.GetReq().(*Request_MetaData); ok {
		return x.MetaData
	}
	return ""
}

func (m *Request) GetBalance() string {
	if x, ok := m.GetReq().(*Request_Balance); ok {
		return x.Balance
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_BlockNumber)(nil),
		(*Request_BlockByHash)(nil),
		(*Request_BlockByHeight)(nil),
		(*Request_Transaction)(nil),
		(*Request_Height)(nil),
		(*Request_Peercount)(nil),
		(*Request_Call)(nil),
		(*Request_Filter)(nil),
		(*Request_TransactionReceipt)(nil),
		(*Request_TransactionCount)(nil),
		(*Request_Code)(nil),
		(*Request_Abi)(nil),
		(*Request_NewFilter)(nil),
		(*Request_NewBlockFilter)(nil),
		(*Request_UninstallFilter)(nil),
		(*Request_FilterChanges)(nil),
		(*Request_FilterLogs)(nil),
		(*Request_UnTx)(nil),
		(*Request_BatchReq)(nil),
		(*Request_TransactionProof)(nil),
		(*Request_MetaData)(nil),
		(*Request_Balance)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// req
	switch x := m.Req.(type) {
	case *Request_BlockNumber:
		t := uint64(0)
		if x.BlockNumber {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Request_BlockByHash:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.BlockByHash)
	case *Request_BlockByHeight:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.BlockByHeight)
	case *Request_Transaction:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Transaction)
	case *Request_Height:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case *Request_Peercount:
		t := uint64(0)
		if x.Peercount {
			t = 1
		}
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Request_Call:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Call); err != nil {
			return err
		}
	case *Request_Filter:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Filter)
	case *Request_TransactionReceipt:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.TransactionReceipt)
	case *Request_TransactionCount:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TransactionCount)
	case *Request_Code:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Code)
	case *Request_Abi:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Abi)
	case *Request_NewFilter:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.NewFilter)
	case *Request_NewBlockFilter:
		t := uint64(0)
		if x.NewBlockFilter {
			t = 1
		}
		b.EncodeVarint(15<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Request_UninstallFilter:
		b.EncodeVarint(16<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.UninstallFilter))
	case *Request_FilterChanges:
		b.EncodeVarint(17<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.FilterChanges))
	case *Request_FilterLogs:
		b.EncodeVarint(18<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.FilterLogs))
	case *Request_UnTx:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnTx); err != nil {
			return err
		}
	case *Request_BatchReq:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BatchReq); err != nil {
			return err
		}
	case *Request_TransactionProof:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.TransactionProof)
	case *Request_MetaData:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MetaData)
	case *Request_Balance:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Balance)
	case nil:
	default:
		return fmt.Errorf("Request.Req has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 2: // req.block_number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_BlockNumber{x != 0}
		return true, err
	case 3: // req.block_by_hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_BlockByHash{x}
		return true, err
	case 4: // req.block_by_height
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_BlockByHeight{x}
		return true, err
	case 5: // req.transaction
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Req = &Request_Transaction{x}
		return true, err
	case 6: // req.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_Height{x}
		return true, err
	case 7: // req.peercount
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_Peercount{x != 0}
		return true, err
	case 8: // req.call
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Call)
		err := b.DecodeMessage(msg)
		m.Req = &Request_Call{msg}
		return true, err
	case 9: // req.filter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_Filter{x}
		return true, err
	case 10: // req.transaction_receipt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Req = &Request_TransactionReceipt{x}
		return true, err
	case 11: // req.transaction_count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_TransactionCount{x}
		return true, err
	case 12: // req.code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_Code{x}
		return true, err
	case 13: // req.abi
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_Abi{x}
		return true, err
	case 14: // req.new_filter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_NewFilter{x}
		return true, err
	case 15: // req.new_block_filter
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_NewBlockFilter{x != 0}
		return true, err
	case 16: // req.uninstall_filter
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_UninstallFilter{x}
		return true, err
	case 17: // req.filter_changes
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_FilterChanges{x}
		return true, err
	case 18: // req.filter_logs
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &Request_FilterLogs{x}
		return true, err
	case 19: // req.un_tx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnverifiedTransaction)
		err := b.DecodeMessage(msg)
		m.Req = &Request_UnTx{msg}
		return true, err
	case 20: // req.batch_req
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BatchRequest)
		err := b.DecodeMessage(msg)
		m.Req = &Request_BatchReq{msg}
		return true, err
	case 21: // req.transaction_proof
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Req = &Request_TransactionProof{x}
		return true, err
	case 22: // req.meta_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_MetaData{x}
		return true, err
	case 23: // req.balance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Req = &Request_Balance{x}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// req
	switch x := m.Req.(type) {
	case *Request_BlockNumber:
		n += 1 // tag and wire
		n += 1
	case *Request_BlockByHash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.BlockByHash)))
		n += len(x.BlockByHash)
	case *Request_BlockByHeight:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.BlockByHeight)))
		n += len(x.BlockByHeight)
	case *Request_Transaction:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Transaction)))
		n += len(x.Transaction)
	case *Request_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case *Request_Peercount:
		n += 1 // tag and wire
		n += 1
	case *Request_Call:
		s := proto.Size(x.Call)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Filter:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Filter)))
		n += len(x.Filter)
	case *Request_TransactionReceipt:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TransactionReceipt)))
		n += len(x.TransactionReceipt)
	case *Request_TransactionCount:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TransactionCount)))
		n += len(x.TransactionCount)
	case *Request_Code:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Code)))
		n += len(x.Code)
	case *Request_Abi:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Abi)))
		n += len(x.Abi)
	case *Request_NewFilter:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.NewFilter)))
		n += len(x.NewFilter)
	case *Request_NewBlockFilter:
		n += 1 // tag and wire
		n += 1
	case *Request_UninstallFilter:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.UninstallFilter))
	case *Request_FilterChanges:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.FilterChanges))
	case *Request_FilterLogs:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.FilterLogs))
	case *Request_UnTx:
		s := proto.Size(x.UnTx)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BatchReq:
		s := proto.Size(x.BatchReq)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_TransactionProof:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TransactionProof)))
		n += len(x.TransactionProof)
	case *Request_MetaData:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.MetaData)))
		n += len(x.MetaData)
	case *Request_Balance:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Balance)))
		n += len(x.Balance)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BatchRequest struct {
	NewTxRequests        []*Request `protobuf:"bytes,1,rep,name=new_tx_requests,json=newTxRequests" json:"new_tx_requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BatchRequest) Reset()         { *m = BatchRequest{} }
func (m *BatchRequest) String() string { return proto.CompactTextString(m) }
func (*BatchRequest) ProtoMessage()    {}
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_f968eedce0803cfb, []int{2}
}
func (m *BatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchRequest.Unmarshal(m, b)
}
func (m *BatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchRequest.Marshal(b, m, deterministic)
}
func (dst *BatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchRequest.Merge(dst, src)
}
func (m *BatchRequest) XXX_Size() int {
	return xxx_messageInfo_BatchRequest.Size(m)
}
func (m *BatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchRequest proto.InternalMessageInfo

func (m *BatchRequest) GetNewTxRequests() []*Request {
	if m != nil {
		return m.NewTxRequests
	}
	return nil
}

func init() {
	proto.RegisterType((*Call)(nil), "Call")
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*BatchRequest)(nil), "BatchRequest")
	proto.RegisterEnum("BlockTag", BlockTag_name, BlockTag_value)
}

func init() { proto.RegisterFile("request.proto", fileDescriptor_request_f968eedce0803cfb) }

var fileDescriptor_request_f968eedce0803cfb = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x94, 0x6f, 0x6f, 0xd3, 0x3c,
	0x14, 0xc5, 0xdb, 0xf5, 0xcf, 0x92, 0xdb, 0xa6, 0xed, 0xee, 0xf6, 0xec, 0xb1, 0x86, 0x06, 0xa5,
	0x4c, 0xa2, 0x1a, 0xac, 0x82, 0xf1, 0x05, 0x50, 0x07, 0xa8, 0x48, 0x13, 0x42, 0x51, 0xe1, 0x6d,
	0xe4, 0xa4, 0x6e, 0x13, 0x91, 0xd9, 0x9d, 0xe3, 0xd2, 0xee, 0x6b, 0xf2, 0x89, 0x90, 0x9d, 0xdb,
	0x2d, 0xe2, 0x5d, 0xee, 0x39, 0xbf, 0xd8, 0x27, 0xc7, 0x75, 0x21, 0xd0, 0xe2, 0x7e, 0x23, 0x0a,
	0x33, 0x59, 0x6b, 0x65, 0xd4, 0xd9, 0x20, 0xce, 0x55, 0xf2, 0x2b, 0x49, 0x79, 0x26, 0x4b, 0x65,
	0xf4, 0x13, 0x9a, 0x37, 0x3c, 0xcf, 0x11, 0xa1, 0xb9, 0xd4, 0xea, 0x8e, 0xd5, 0x87, 0xf5, 0x71,
	0x37, 0x74, 0xcf, 0xd8, 0x83, 0x03, 0xa3, 0xd8, 0x81, 0x53, 0x0e, 0x8c, 0xb2, 0xcc, 0x82, 0x1b,
	0xce, 0x1a, 0x25, 0x63, 0x9f, 0xf1, 0x14, 0xda, 0xa9, 0xc8, 0x56, 0xa9, 0x61, 0xcd, 0x61, 0x7d,
	0xec, 0x87, 0x34, 0x8d, 0xfe, 0xb4, 0xe1, 0x30, 0x2c, 0xf7, 0xc6, 0x73, 0x00, 0x8a, 0x11, 0x65,
	0x0b, 0xda, 0xc1, 0x27, 0xe5, 0xeb, 0x02, 0x5f, 0x41, 0xd7, 0xc5, 0x8a, 0xe4, 0xe6, 0x2e, 0x16,
	0xda, 0x6d, 0xe8, 0xcd, 0x6a, 0x61, 0xc7, 0xa9, 0xdf, 0x9c, 0x88, 0x17, 0x10, 0x94, 0x50, 0xfc,
	0x10, 0xa5, 0xbc, 0x48, 0x5d, 0x08, 0xff, 0x91, 0x9a, 0x3e, 0xcc, 0x78, 0x91, 0xe2, 0x18, 0xfa,
	0x4f, 0x54, 0x25, 0xd6, 0xac, 0x16, 0x06, 0x7b, 0xce, 0xc9, 0x38, 0x82, 0x8e, 0xd1, 0x5c, 0x16,
	0x3c, 0x31, 0x99, 0x92, 0xac, 0x65, 0x43, 0xd9, 0xd5, 0x2a, 0x22, 0xb2, 0xc7, 0x6f, 0x6b, 0x0f,
	0xeb, 0xe3, 0xe6, 0xac, 0xb6, 0xff, 0x3a, 0x7c, 0x0e, 0xfe, 0x5a, 0x08, 0x9d, 0xa8, 0x8d, 0x34,
	0xec, 0x90, 0xf2, 0x3e, 0x49, 0xf8, 0x0c, 0x9a, 0x09, 0xcf, 0x73, 0xe6, 0x0d, 0xeb, 0xe3, 0xce,
	0x75, 0x6b, 0x62, 0x2b, 0x9e, 0xd5, 0x42, 0x27, 0xda, 0x65, 0x97, 0x59, 0x6e, 0x84, 0x66, 0x3e,
	0x65, 0xa3, 0x19, 0xdf, 0xc3, 0x71, 0x65, 0xff, 0x48, 0x8b, 0x44, 0x64, 0x6b, 0xc3, 0x80, 0xc2,
	0x61, 0xc5, 0x0c, 0x4b, 0x0f, 0xaf, 0xe0, 0xa8, 0xfa, 0x4a, 0x99, 0xa8, 0x43, 0xeb, 0x0e, 0x2a,
	0xd6, 0x8d, 0x0b, 0x76, 0x02, 0xcd, 0x44, 0x2d, 0x04, 0xeb, 0x12, 0xe1, 0x26, 0x44, 0x68, 0xf0,
	0x38, 0x63, 0x01, 0x89, 0x76, 0xc0, 0x17, 0x00, 0x52, 0x6c, 0x23, 0x4a, 0xda, 0x23, 0xcb, 0x97,
	0x62, 0xfb, 0xa5, 0x0c, 0x7b, 0x09, 0x03, 0x0b, 0x94, 0x7d, 0x13, 0xd6, 0xa7, 0x2a, 0x7a, 0x52,
	0x6c, 0xa7, 0xd6, 0x20, 0xf6, 0x0d, 0x0c, 0x36, 0x32, 0x93, 0x85, 0xe1, 0x79, 0xbe, 0x67, 0x07,
	0xd4, 0x69, 0xff, 0xd1, 0x21, 0xf8, 0x35, 0xf4, 0x4a, 0x24, 0x4a, 0x52, 0x2e, 0x57, 0xa2, 0x60,
	0x47, 0x84, 0x06, 0xa5, 0x7e, 0x53, 0xca, 0xf8, 0x12, 0x3a, 0x04, 0xe6, 0x6a, 0x55, 0x30, 0x24,
	0x0a, 0x4a, 0xf1, 0x56, 0xad, 0x0a, 0xbc, 0x82, 0xd6, 0x46, 0x46, 0x66, 0xc7, 0x8e, 0xdd, 0x49,
	0x9c, 0x4e, 0x7e, 0xc8, 0xdf, 0x42, 0x67, 0xcb, 0x4c, 0x2c, 0xe6, 0x4f, 0xdd, 0xd8, 0x22, 0x36,
	0x72, 0xbe, 0xc3, 0xb7, 0xe0, 0xc7, 0xdc, 0x24, 0x69, 0xa4, 0xc5, 0x3d, 0x3b, 0x71, 0xaf, 0x04,
	0x93, 0xa9, 0x55, 0xe8, 0xb7, 0x3c, 0xab, 0x85, 0x5e, 0x4c, 0xf3, 0xbf, 0xdd, 0xaf, 0xb5, 0x52,
	0x4b, 0xf6, 0x1f, 0x1d, 0x56, 0xb5, 0xfb, 0xef, 0xd6, 0xc1, 0x73, 0xf0, 0xef, 0x84, 0xe1, 0x91,
	0xbb, 0x43, 0xa7, 0x54, 0xa8, 0x67, 0xa5, 0x4f, 0xf6, 0x26, 0x9d, 0xc1, 0x61, 0xcc, 0x73, 0x2e,
	0x13, 0xc1, 0xfe, 0x27, 0x73, 0x2f, 0x4c, 0x5b, 0xd0, 0xd0, 0xe2, 0x7e, 0xf4, 0x11, 0xba, 0xd5,
	0x30, 0xf8, 0x0e, 0xfa, 0xf6, 0x08, 0xcc, 0x2e, 0xa2, 0xdb, 0x54, 0xb0, 0xfa, 0xb0, 0x31, 0xee,
	0x5c, 0x7b, 0x13, 0x42, 0xc2, 0x40, 0x8a, 0xed, 0x7c, 0x47, 0x53, 0x71, 0x79, 0x01, 0x9e, 0x3b,
	0x97, 0x39, 0x5f, 0x21, 0x40, 0xfb, 0x96, 0x1b, 0x51, 0x98, 0x41, 0x0d, 0xbb, 0xe0, 0x7d, 0xe6,
	0x3a, 0xcf, 0xec, 0x54, 0x8f, 0xdb, 0xee, 0xbf, 0xe1, 0xc3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xba, 0x3e, 0x7e, 0x4c, 0x3e, 0x04, 0x00, 0x00,
}
