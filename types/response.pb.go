// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FullTransaction struct {
	Transaction          *SignedTransaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	BlockNumber          uint64             `protobuf:"varint,2,opt,name=block_number,json=blockNumber" json:"block_number,omitempty"`
	BlockHash            []byte             `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Index                uint32             `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FullTransaction) Reset()         { *m = FullTransaction{} }
func (m *FullTransaction) String() string { return proto.CompactTextString(m) }
func (*FullTransaction) ProtoMessage()    {}
func (*FullTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_cdc8a452f1883b65, []int{0}
}
func (m *FullTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullTransaction.Unmarshal(m, b)
}
func (m *FullTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullTransaction.Marshal(b, m, deterministic)
}
func (dst *FullTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullTransaction.Merge(dst, src)
}
func (m *FullTransaction) XXX_Size() int {
	return xxx_messageInfo_FullTransaction.Size(m)
}
func (m *FullTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_FullTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_FullTransaction proto.InternalMessageInfo

func (m *FullTransaction) GetTransaction() *SignedTransaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *FullTransaction) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *FullTransaction) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *FullTransaction) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Response struct {
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Code      int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Response_ErrorMsg
	//	*Response_TxState
	//	*Response_BlockNumber
	//	*Response_Block
	//	*Response_Ts
	//	*Response_Peercount
	//	*Response_CallResult
	//	*Response_Logs
	//	*Response_Receipt
	//	*Response_TransactionCount
	//	*Response_ContractCode
	//	*Response_ContractAbi
	//	*Response_FilterId
	//	*Response_UninstallFilter
	//	*Response_FilterChanges
	//	*Response_FilterLogs
	//	*Response_None
	//	*Response_TransactionProof
	//	*Response_MetaData
	//	*Response_Balance
	Data                 isResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_cdc8a452f1883b65, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type isResponse_Data interface {
	isResponse_Data()
}

type Response_ErrorMsg struct {
	ErrorMsg string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,oneof"`
}
type Response_TxState struct {
	TxState string `protobuf:"bytes,4,opt,name=tx_state,json=txState,oneof"`
}
type Response_BlockNumber struct {
	BlockNumber uint64 `protobuf:"varint,5,opt,name=block_number,json=blockNumber,oneof"`
}
type Response_Block struct {
	Block string `protobuf:"bytes,6,opt,name=block,oneof"`
}
type Response_Ts struct {
	Ts *FullTransaction `protobuf:"bytes,7,opt,name=ts,oneof"`
}
type Response_Peercount struct {
	Peercount uint32 `protobuf:"varint,8,opt,name=peercount,oneof"`
}
type Response_CallResult struct {
	CallResult []byte `protobuf:"bytes,9,opt,name=call_result,json=callResult,proto3,oneof"`
}
type Response_Logs struct {
	Logs string `protobuf:"bytes,10,opt,name=logs,oneof"`
}
type Response_Receipt struct {
	Receipt string `protobuf:"bytes,11,opt,name=receipt,oneof"`
}
type Response_TransactionCount struct {
	TransactionCount uint64 `protobuf:"varint,12,opt,name=transaction_count,json=transactionCount,oneof"`
}
type Response_ContractCode struct {
	ContractCode []byte `protobuf:"bytes,13,opt,name=contract_code,json=contractCode,proto3,oneof"`
}
type Response_ContractAbi struct {
	ContractAbi []byte `protobuf:"bytes,14,opt,name=contract_abi,json=contractAbi,proto3,oneof"`
}
type Response_FilterId struct {
	FilterId uint64 `protobuf:"varint,15,opt,name=filter_id,json=filterId,oneof"`
}
type Response_UninstallFilter struct {
	UninstallFilter bool `protobuf:"varint,16,opt,name=uninstall_filter,json=uninstallFilter,oneof"`
}
type Response_FilterChanges struct {
	FilterChanges string `protobuf:"bytes,17,opt,name=filter_changes,json=filterChanges,oneof"`
}
type Response_FilterLogs struct {
	FilterLogs string `protobuf:"bytes,18,opt,name=filter_logs,json=filterLogs,oneof"`
}
type Response_None struct {
	None bool `protobuf:"varint,19,opt,name=none,oneof"`
}
type Response_TransactionProof struct {
	TransactionProof []byte `protobuf:"bytes,20,opt,name=transaction_proof,json=transactionProof,proto3,oneof"`
}
type Response_MetaData struct {
	MetaData string `protobuf:"bytes,21,opt,name=meta_data,json=metaData,oneof"`
}
type Response_Balance struct {
	Balance []byte `protobuf:"bytes,22,opt,name=balance,proto3,oneof"`
}

func (*Response_ErrorMsg) isResponse_Data()         {}
func (*Response_TxState) isResponse_Data()          {}
func (*Response_BlockNumber) isResponse_Data()      {}
func (*Response_Block) isResponse_Data()            {}
func (*Response_Ts) isResponse_Data()               {}
func (*Response_Peercount) isResponse_Data()        {}
func (*Response_CallResult) isResponse_Data()       {}
func (*Response_Logs) isResponse_Data()             {}
func (*Response_Receipt) isResponse_Data()          {}
func (*Response_TransactionCount) isResponse_Data() {}
func (*Response_ContractCode) isResponse_Data()     {}
func (*Response_ContractAbi) isResponse_Data()      {}
func (*Response_FilterId) isResponse_Data()         {}
func (*Response_UninstallFilter) isResponse_Data()  {}
func (*Response_FilterChanges) isResponse_Data()    {}
func (*Response_FilterLogs) isResponse_Data()       {}
func (*Response_None) isResponse_Data()             {}
func (*Response_TransactionProof) isResponse_Data() {}
func (*Response_MetaData) isResponse_Data()         {}
func (*Response_Balance) isResponse_Data()          {}

func (m *Response) GetData() isResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Response) GetRequestId() []byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *Response) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetErrorMsg() string {
	if x, ok := m.GetData().(*Response_ErrorMsg); ok {
		return x.ErrorMsg
	}
	return ""
}

func (m *Response) GetTxState() string {
	if x, ok := m.GetData().(*Response_TxState); ok {
		return x.TxState
	}
	return ""
}

func (m *Response) GetBlockNumber() uint64 {
	if x, ok := m.GetData().(*Response_BlockNumber); ok {
		return x.BlockNumber
	}
	return 0
}

func (m *Response) GetBlock() string {
	if x, ok := m.GetData().(*Response_Block); ok {
		return x.Block
	}
	return ""
}

func (m *Response) GetTs() *FullTransaction {
	if x, ok := m.GetData().(*Response_Ts); ok {
		return x.Ts
	}
	return nil
}

func (m *Response) GetPeercount() uint32 {
	if x, ok := m.GetData().(*Response_Peercount); ok {
		return x.Peercount
	}
	return 0
}

func (m *Response) GetCallResult() []byte {
	if x, ok := m.GetData().(*Response_CallResult); ok {
		return x.CallResult
	}
	return nil
}

func (m *Response) GetLogs() string {
	if x, ok := m.GetData().(*Response_Logs); ok {
		return x.Logs
	}
	return ""
}

func (m *Response) GetReceipt() string {
	if x, ok := m.GetData().(*Response_Receipt); ok {
		return x.Receipt
	}
	return ""
}

func (m *Response) GetTransactionCount() uint64 {
	if x, ok := m.GetData().(*Response_TransactionCount); ok {
		return x.TransactionCount
	}
	return 0
}

func (m *Response) GetContractCode() []byte {
	if x, ok := m.GetData().(*Response_ContractCode); ok {
		return x.ContractCode
	}
	return nil
}

func (m *Response) GetContractAbi() []byte {
	if x, ok := m.GetData().(*Response_ContractAbi); ok {
		return x.ContractAbi
	}
	return nil
}

func (m *Response) GetFilterId() uint64 {
	if x, ok := m.GetData().(*Response_FilterId); ok {
		return x.FilterId
	}
	return 0
}

func (m *Response) GetUninstallFilter() bool {
	if x, ok := m.GetData().(*Response_UninstallFilter); ok {
		return x.UninstallFilter
	}
	return false
}

func (m *Response) GetFilterChanges() string {
	if x, ok := m.GetData().(*Response_FilterChanges); ok {
		return x.FilterChanges
	}
	return ""
}

func (m *Response) GetFilterLogs() string {
	if x, ok := m.GetData().(*Response_FilterLogs); ok {
		return x.FilterLogs
	}
	return ""
}

func (m *Response) GetNone() bool {
	if x, ok := m.GetData().(*Response_None); ok {
		return x.None
	}
	return false
}

func (m *Response) GetTransactionProof() []byte {
	if x, ok := m.GetData().(*Response_TransactionProof); ok {
		return x.TransactionProof
	}
	return nil
}

func (m *Response) GetMetaData() string {
	if x, ok := m.GetData().(*Response_MetaData); ok {
		return x.MetaData
	}
	return ""
}

func (m *Response) GetBalance() []byte {
	if x, ok := m.GetData().(*Response_Balance); ok {
		return x.Balance
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_ErrorMsg)(nil),
		(*Response_TxState)(nil),
		(*Response_BlockNumber)(nil),
		(*Response_Block)(nil),
		(*Response_Ts)(nil),
		(*Response_Peercount)(nil),
		(*Response_CallResult)(nil),
		(*Response_Logs)(nil),
		(*Response_Receipt)(nil),
		(*Response_TransactionCount)(nil),
		(*Response_ContractCode)(nil),
		(*Response_ContractAbi)(nil),
		(*Response_FilterId)(nil),
		(*Response_UninstallFilter)(nil),
		(*Response_FilterChanges)(nil),
		(*Response_FilterLogs)(nil),
		(*Response_None)(nil),
		(*Response_TransactionProof)(nil),
		(*Response_MetaData)(nil),
		(*Response_Balance)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// data
	switch x := m.Data.(type) {
	case *Response_ErrorMsg:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ErrorMsg)
	case *Response_TxState:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TxState)
	case *Response_BlockNumber:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.BlockNumber))
	case *Response_Block:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Block)
	case *Response_Ts:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ts); err != nil {
			return err
		}
	case *Response_Peercount:
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Peercount))
	case *Response_CallResult:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.CallResult)
	case *Response_Logs:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Logs)
	case *Response_Receipt:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Receipt)
	case *Response_TransactionCount:
		b.EncodeVarint(12<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.TransactionCount))
	case *Response_ContractCode:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ContractCode)
	case *Response_ContractAbi:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ContractAbi)
	case *Response_FilterId:
		b.EncodeVarint(15<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.FilterId))
	case *Response_UninstallFilter:
		t := uint64(0)
		if x.UninstallFilter {
			t = 1
		}
		b.EncodeVarint(16<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Response_FilterChanges:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FilterChanges)
	case *Response_FilterLogs:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FilterLogs)
	case *Response_None:
		t := uint64(0)
		if x.None {
			t = 1
		}
		b.EncodeVarint(19<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Response_TransactionProof:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.TransactionProof)
	case *Response_MetaData:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MetaData)
	case *Response_Balance:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Balance)
	case nil:
	default:
		return fmt.Errorf("Response.Data has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 3: // data.error_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_ErrorMsg{x}
		return true, err
	case 4: // data.tx_state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_TxState{x}
		return true, err
	case 5: // data.block_number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_BlockNumber{x}
		return true, err
	case 6: // data.block
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_Block{x}
		return true, err
	case 7: // data.ts
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FullTransaction)
		err := b.DecodeMessage(msg)
		m.Data = &Response_Ts{msg}
		return true, err
	case 8: // data.peercount
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_Peercount{uint32(x)}
		return true, err
	case 9: // data.call_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_CallResult{x}
		return true, err
	case 10: // data.logs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_Logs{x}
		return true, err
	case 11: // data.receipt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_Receipt{x}
		return true, err
	case 12: // data.transaction_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_TransactionCount{x}
		return true, err
	case 13: // data.contract_code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_ContractCode{x}
		return true, err
	case 14: // data.contract_abi
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_ContractAbi{x}
		return true, err
	case 15: // data.filter_id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_FilterId{x}
		return true, err
	case 16: // data.uninstall_filter
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_UninstallFilter{x != 0}
		return true, err
	case 17: // data.filter_changes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_FilterChanges{x}
		return true, err
	case 18: // data.filter_logs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_FilterLogs{x}
		return true, err
	case 19: // data.none
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_None{x != 0}
		return true, err
	case 20: // data.transaction_proof
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_TransactionProof{x}
		return true, err
	case 21: // data.meta_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_MetaData{x}
		return true, err
	case 22: // data.balance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_Balance{x}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// data
	switch x := m.Data.(type) {
	case *Response_ErrorMsg:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ErrorMsg)))
		n += len(x.ErrorMsg)
	case *Response_TxState:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TxState)))
		n += len(x.TxState)
	case *Response_BlockNumber:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.BlockNumber))
	case *Response_Block:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Block)))
		n += len(x.Block)
	case *Response_Ts:
		s := proto.Size(x.Ts)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Peercount:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Peercount))
	case *Response_CallResult:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.CallResult)))
		n += len(x.CallResult)
	case *Response_Logs:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Logs)))
		n += len(x.Logs)
	case *Response_Receipt:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Receipt)))
		n += len(x.Receipt)
	case *Response_TransactionCount:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.TransactionCount))
	case *Response_ContractCode:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ContractCode)))
		n += len(x.ContractCode)
	case *Response_ContractAbi:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ContractAbi)))
		n += len(x.ContractAbi)
	case *Response_FilterId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.FilterId))
	case *Response_UninstallFilter:
		n += 2 // tag and wire
		n += 1
	case *Response_FilterChanges:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.FilterChanges)))
		n += len(x.FilterChanges)
	case *Response_FilterLogs:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.FilterLogs)))
		n += len(x.FilterLogs)
	case *Response_None:
		n += 2 // tag and wire
		n += 1
	case *Response_TransactionProof:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TransactionProof)))
		n += len(x.TransactionProof)
	case *Response_MetaData:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.MetaData)))
		n += len(x.MetaData)
	case *Response_Balance:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Balance)))
		n += len(x.Balance)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*FullTransaction)(nil), "FullTransaction")
	proto.RegisterType((*Response)(nil), "Response")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor_response_cdc8a452f1883b65) }

var fileDescriptor_response_cdc8a452f1883b65 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x93, 0x2e, 0x6d, 0x93, 0x93, 0xfe, 0x9b, 0x29, 0x93, 0x35, 0x34, 0xd4, 0x75, 0x42,
	0x54, 0x42, 0xf4, 0x02, 0x78, 0x01, 0x28, 0x9a, 0x32, 0x09, 0x10, 0xf2, 0xb8, 0x8f, 0x1c, 0xc7,
	0x6b, 0x23, 0x52, 0xbb, 0xd8, 0x8e, 0xd4, 0xb7, 0xe1, 0xfd, 0x78, 0x0a, 0x64, 0xc7, 0xdd, 0xba,
	0xde, 0xf5, 0xfc, 0xce, 0xb1, 0x3f, 0x7f, 0xdf, 0x69, 0x60, 0xa4, 0xb8, 0xde, 0x49, 0xa1, 0xf9,
	0x72, 0xa7, 0xa4, 0x91, 0x97, 0x93, 0xa2, 0x96, 0xec, 0x37, 0xdb, 0xd0, 0x4a, 0xb4, 0x64, 0xfe,
	0x37, 0x84, 0xf1, 0x6d, 0x53, 0xd7, 0xbf, 0x14, 0x15, 0x9a, 0x32, 0x53, 0x49, 0x81, 0x3e, 0x41,
	0x6a, 0x9e, 0x4a, 0x1c, 0xce, 0xc2, 0x45, 0xfa, 0x01, 0x2d, 0xef, 0xab, 0xb5, 0xe0, 0xe5, 0xd1,
	0x20, 0x39, 0x1e, 0x43, 0xd7, 0x30, 0x70, 0xb7, 0xe7, 0xa2, 0xd9, 0x16, 0x5c, 0xe1, 0xce, 0x2c,
	0x5c, 0x44, 0x24, 0x75, 0xec, 0x87, 0x43, 0xe8, 0x0a, 0xa0, 0x1d, 0xd9, 0x50, 0xbd, 0xc1, 0x67,
	0xb3, 0x70, 0x31, 0x20, 0x89, 0x23, 0x19, 0xd5, 0x1b, 0x34, 0x85, 0x6e, 0x25, 0x4a, 0xbe, 0xc7,
	0xd1, 0x2c, 0x5c, 0x0c, 0x49, 0x5b, 0xcc, 0xff, 0x75, 0x21, 0x26, 0xde, 0x86, 0xbd, 0x41, 0xf1,
	0x3f, 0x0d, 0xd7, 0x26, 0xaf, 0x4a, 0xf7, 0xb2, 0x01, 0x49, 0x3c, 0xb9, 0x2b, 0x11, 0x82, 0x88,
	0xc9, 0x92, 0x3b, 0xed, 0x33, 0xe2, 0x7e, 0xa3, 0x2b, 0x48, 0xb8, 0x52, 0x52, 0xe5, 0x5b, 0xbd,
	0x76, 0x9a, 0x49, 0x16, 0x90, 0xd8, 0xa1, 0xef, 0x7a, 0x8d, 0x5e, 0x41, 0x6c, 0xf6, 0xb9, 0x36,
	0xd4, 0x70, 0xa7, 0x6b, 0xbb, 0x7d, 0xb3, 0xbf, 0xb7, 0x00, 0xdd, 0x9c, 0x78, 0xea, 0x5a, 0x4f,
	0x59, 0xf0, 0xdc, 0xd5, 0x05, 0x74, 0x5d, 0x89, 0x7b, 0xfe, 0x78, 0x5b, 0xa2, 0x39, 0x74, 0x8c,
	0xc6, 0x7d, 0x97, 0xde, 0x64, 0x79, 0x12, 0x72, 0x16, 0x90, 0x8e, 0xd1, 0xe8, 0x35, 0x24, 0x3b,
	0xce, 0x15, 0x93, 0x8d, 0x30, 0x38, 0xb6, 0xb6, 0xb3, 0x80, 0x3c, 0x21, 0x74, 0x0d, 0x29, 0xa3,
	0x75, 0x9d, 0x2b, 0xae, 0x9b, 0xda, 0xe0, 0xc4, 0x1a, 0xce, 0x02, 0x02, 0x16, 0x12, 0xc7, 0xd0,
	0x14, 0xa2, 0x5a, 0xae, 0x35, 0x06, 0xaf, 0xee, 0x2a, 0x74, 0x09, 0x7d, 0xc5, 0x19, 0xaf, 0x76,
	0x06, 0xa7, 0x07, 0x57, 0x1e, 0xa0, 0xf7, 0x70, 0x7e, 0xb4, 0xb8, 0xbc, 0x15, 0x1f, 0x78, 0x6b,
	0x93, 0xa3, 0xd6, 0xca, 0xbd, 0xe1, 0x0d, 0x0c, 0x99, 0x14, 0x46, 0x51, 0x66, 0x72, 0x97, 0xee,
	0xd0, 0xbf, 0x62, 0x70, 0xc0, 0x2b, 0x9b, 0xf3, 0x0d, 0x3c, 0xd6, 0x39, 0x2d, 0x2a, 0x3c, 0xf2,
	0x53, 0xe9, 0x81, 0x7e, 0x2e, 0x2a, 0xbb, 0x8c, 0x87, 0xaa, 0x36, 0x5c, 0xd9, 0xf5, 0x8d, 0xbd,
	0x64, 0xdc, 0xa2, 0xbb, 0x12, 0xbd, 0x83, 0x49, 0x23, 0x2a, 0xa1, 0x8d, 0xf5, 0xdc, 0x52, 0x3c,
	0x99, 0x85, 0x8b, 0x38, 0x0b, 0xc8, 0xf8, 0xb1, 0x73, 0xeb, 0x1a, 0xe8, 0x2d, 0x8c, 0xfc, 0x5d,
	0x6c, 0x43, 0xc5, 0x9a, 0x6b, 0x7c, 0xee, 0x9d, 0x0e, 0x5b, 0xbe, 0x6a, 0xb1, 0x0d, 0xd1, 0x0f,
	0xba, 0xa0, 0x90, 0x9f, 0x82, 0x16, 0x7e, 0xb3, 0x71, 0x4d, 0x21, 0x12, 0x52, 0x70, 0xfc, 0xc2,
	0x8b, 0xb9, 0xea, 0x34, 0xa8, 0x9d, 0x92, 0xf2, 0x01, 0x4f, 0xbd, 0xaf, 0xe3, 0xa0, 0x7e, 0xda,
	0x8e, 0x35, 0xb7, 0xe5, 0x86, 0xe6, 0x25, 0x35, 0x14, 0xbf, 0x3c, 0xfc, 0xd3, 0x2c, 0xfa, 0x4a,
	0x0d, 0xb5, 0x2b, 0x29, 0x68, 0x4d, 0x05, 0xe3, 0xf8, 0xc2, 0xdf, 0x71, 0x00, 0x5f, 0x7a, 0x10,
	0xd9, 0x53, 0x45, 0xcf, 0x7d, 0x95, 0x1f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x88, 0x69, 0x38,
	0x70, 0xb9, 0x03, 0x00, 0x00,
}
