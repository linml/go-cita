syntax = "proto3";

import "common.proto";

enum Crypto {
  SECP = 0;
  SM2 = 1;
}

message Transaction {
  string to = 1;
  string nonce = 2;
  uint64 quota = 3;
  uint64 valid_until_block = 4;
  bytes data = 5;
  uint64 value = 6;
  uint32 chain_id = 7;
  uint32 version = 8;
}

message UnverifiedTransaction {
  Transaction transaction = 1;
  bytes signature = 2;
  Crypto crypto = 3;
}

message SignedTransaction {
  UnverifiedTransaction transaction_with_sig = 1;
  bytes tx_hash = 2;  // SignedTransaction hash
  bytes signer = 3; //public key
}

message SendTransactionReq {
  UnverifiedTransaction untx = 1;
}

message SendTransactionRes {
  bytes tx_hash = 1;
}

message VerifyTxHashesReq {
  repeated bytes tx_hashes = 1;
}

message GetTxFromPoolReq {
  uint64 quota_limit = 1;
  uint32 tx_count = 2;
}

message GetTxFromPoolRes {
  repeated bytes tx_hashes = 1;
  uint64 quota_used = 2;
}

service Auth {
  rpc SendTransaction (SendTransactionReq) returns (SendTransactionRes) {}

  rpc GetTxFromPool (GetTxFromPoolReq) returns (GetTxFromPoolRes) {}
  rpc VerifyTxHashes (VerifyTxHashesReq) returns (Empty) {}
}
