syntax = "proto3";

import "common.proto";

enum ProofType {
  AuthorityRound = 0;
  Raft = 1;
  Tendermint = 2;
}

message Proof {
  bytes content = 1;
  ProofType type = 2;
}

message Block {
  uint32 version = 1;
  BlockHeader header = 2;
  BlockBody body = 3;
}

message BlockHeader {
  bytes prevhash = 1;
  uint64 timestamp = 2;
  uint64 height = 3;
  bytes state_root = 4;
  bytes transactions_root = 5;
  bytes receipts_root = 6;
  uint64 quota_used = 7;
  uint64 quota_limit = 8;
  Proof proof = 9;
  bytes proposer = 10;
}

// data precompile API
message BlockBody {
  repeated bytes tx_hashes = 1;
}

message Receipt {
  bytes state_root = 1;
  uint64 quota_used = 2;
  uint64 quota = 3;
  bytes log_bloom = 4;
  repeated LogEntry logs = 5;
  string error = 6;
  bytes transaction_hash = 7;
  bytes contract_address = 8;
  uint64 block_height = 9;
}

message LogEntry {
  bytes address = 1;
  repeated bytes topics = 2;
  bytes data = 3;
}

message NewBlockReq {
  Block block = 1;
}

message NewBlockRes {
  uint64 height = 1;
}

message GetValidatorsReq {
  uint64 height = 1;
}

message GetValidatorsRes {
  repeated bytes vals = 3;
}

message GetBlockHeaderReq {
  uint64 height = 1;
}

message GetBlockHeaderRes {
  BlockHeader header = 1;
}

message GetBlockBodyReq {
  uint64 height = 1;
}

message GetBlockBodyRes {
  BlockBody body = 1;
}

message GetReceiptReq {
  bytes tx_hash = 1;
}

message GetReceiptRes {
  Receipt receipt = 1;
}

service Chain {
  rpc NewBlock (NewBlockReq) returns (Empty) {}
  rpc GetValidators(GetValidatorsReq) returns (GetValidatorsRes) {}

  rpc GetBlockHeader(GetBlockHeaderReq) returns (GetBlockHeaderRes) {}
  rpc GetBlockBody(GetBlockBodyReq) returns (GetBlockBodyRes) {}
  rpc GetReceipt(GetReceiptReq) returns (GetReceiptRes) {}
}
