syntax = "proto3";

enum ProofType {
  AuthorityRound = 0;
  Raft = 1;
  Tendermint = 2;
}

message Proof {
  bytes content = 1;
  ProofType type = 2;
}

message Block {
  uint32 version = 1;
  BlockHeader header = 2;
  BlockBody body = 3;
}

message BlockHeader {
  bytes prevhash = 1;
  uint64 timestamp = 2;
  uint64 height = 3;
  bytes state_root = 4;
  bytes transactions_root = 5;
  bytes receipts_root = 6;
  uint64 gas_used = 7;
  uint64 gas_limit = 8;
  Proof proof = 9;
  bytes proposer = 10;
}

message Status {
  bytes hash = 1;
  uint64 height = 2;
}

message AccountGasLimit {
  uint64 common_gas_limit = 1;
  map<string,uint64> specific_gas_limit = 2;
}

message RichStatus {
  bytes hash = 1;
  uint64 height = 2;
  repeated bytes nodes = 3;
  uint64 interval = 4;
}

// data precompile API
message BlockBody {
  repeated bytes tx_hashes = 1;
}

message BlockWithProof {
  Block blk = 1;
  Proof proof = 2;
}

message NewBlockReq {
  Block block = 1;
  Proof proof = 2;
}

message NewBlockRes {
  uint64 height = 1;
}

message NodeListReq {
  uint64 height = 1;
}

message NodeListRes {
  repeated bytes nodes = 3;
}

message GetBlockHeaderReq {
  uint64 height = 1;
}

message GetBlockHeaderRes {
  BlockHeader header = 1;
}

service Chain {
  rpc NewBlock (NewBlockReq) returns (NewBlockRes) {}
  rpc NodeList(NodeListReq) returns (NodeListRes) {}

  rpc GetBlockHeader(GetBlockHeaderReq) returns (GetBlockHeaderRes) {}
}
