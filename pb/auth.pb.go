// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Crypto int32

const (
	Crypto_SECP Crypto = 0
	Crypto_SM2  Crypto = 1
)

var Crypto_name = map[int32]string{
	0: "SECP",
	1: "SM2",
}
var Crypto_value = map[string]int32{
	"SECP": 0,
	"SM2":  1,
}

func (x Crypto) String() string {
	return proto.EnumName(Crypto_name, int32(x))
}
func (Crypto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{0}
}

type Transaction struct {
	To                   string   `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
	Nonce                string   `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
	Quota                uint64   `protobuf:"varint,3,opt,name=quota" json:"quota,omitempty"`
	ValidUntilBlock      uint64   `protobuf:"varint,4,opt,name=valid_until_block,json=validUntilBlock" json:"valid_until_block,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Value                uint64   `protobuf:"varint,6,opt,name=value" json:"value,omitempty"`
	ChainId              uint32   `protobuf:"varint,7,opt,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	Version              uint32   `protobuf:"varint,8,opt,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{0}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Transaction) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Transaction) GetQuota() uint64 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *Transaction) GetValidUntilBlock() uint64 {
	if m != nil {
		return m.ValidUntilBlock
	}
	return 0
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Transaction) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *Transaction) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type UnverifiedTransaction struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	Signature            []byte       `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Crypto               Crypto       `protobuf:"varint,3,opt,name=crypto,enum=Crypto" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UnverifiedTransaction) Reset()         { *m = UnverifiedTransaction{} }
func (m *UnverifiedTransaction) String() string { return proto.CompactTextString(m) }
func (*UnverifiedTransaction) ProtoMessage()    {}
func (*UnverifiedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{1}
}
func (m *UnverifiedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnverifiedTransaction.Unmarshal(m, b)
}
func (m *UnverifiedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnverifiedTransaction.Marshal(b, m, deterministic)
}
func (dst *UnverifiedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnverifiedTransaction.Merge(dst, src)
}
func (m *UnverifiedTransaction) XXX_Size() int {
	return xxx_messageInfo_UnverifiedTransaction.Size(m)
}
func (m *UnverifiedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_UnverifiedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_UnverifiedTransaction proto.InternalMessageInfo

func (m *UnverifiedTransaction) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *UnverifiedTransaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *UnverifiedTransaction) GetCrypto() Crypto {
	if m != nil {
		return m.Crypto
	}
	return Crypto_SECP
}

type SignedTransaction struct {
	TransactionWithSig   *UnverifiedTransaction `protobuf:"bytes,1,opt,name=transaction_with_sig,json=transactionWithSig" json:"transaction_with_sig,omitempty"`
	TxHash               []byte                 `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Signer               []byte                 `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SignedTransaction) Reset()         { *m = SignedTransaction{} }
func (m *SignedTransaction) String() string { return proto.CompactTextString(m) }
func (*SignedTransaction) ProtoMessage()    {}
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{2}
}
func (m *SignedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedTransaction.Unmarshal(m, b)
}
func (m *SignedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedTransaction.Marshal(b, m, deterministic)
}
func (dst *SignedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedTransaction.Merge(dst, src)
}
func (m *SignedTransaction) XXX_Size() int {
	return xxx_messageInfo_SignedTransaction.Size(m)
}
func (m *SignedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SignedTransaction proto.InternalMessageInfo

func (m *SignedTransaction) GetTransactionWithSig() *UnverifiedTransaction {
	if m != nil {
		return m.TransactionWithSig
	}
	return nil
}

func (m *SignedTransaction) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *SignedTransaction) GetSigner() []byte {
	if m != nil {
		return m.Signer
	}
	return nil
}

type SendTransactionReq struct {
	Untx                 *UnverifiedTransaction `protobuf:"bytes,1,opt,name=untx" json:"untx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SendTransactionReq) Reset()         { *m = SendTransactionReq{} }
func (m *SendTransactionReq) String() string { return proto.CompactTextString(m) }
func (*SendTransactionReq) ProtoMessage()    {}
func (*SendTransactionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{3}
}
func (m *SendTransactionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionReq.Unmarshal(m, b)
}
func (m *SendTransactionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionReq.Marshal(b, m, deterministic)
}
func (dst *SendTransactionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionReq.Merge(dst, src)
}
func (m *SendTransactionReq) XXX_Size() int {
	return xxx_messageInfo_SendTransactionReq.Size(m)
}
func (m *SendTransactionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionReq proto.InternalMessageInfo

func (m *SendTransactionReq) GetUntx() *UnverifiedTransaction {
	if m != nil {
		return m.Untx
	}
	return nil
}

type SendTransactionRes struct {
	TxHash               []byte   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRes) Reset()         { *m = SendTransactionRes{} }
func (m *SendTransactionRes) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRes) ProtoMessage()    {}
func (*SendTransactionRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{4}
}
func (m *SendTransactionRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRes.Unmarshal(m, b)
}
func (m *SendTransactionRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRes.Marshal(b, m, deterministic)
}
func (dst *SendTransactionRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRes.Merge(dst, src)
}
func (m *SendTransactionRes) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRes.Size(m)
}
func (m *SendTransactionRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRes.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRes proto.InternalMessageInfo

func (m *SendTransactionRes) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

type PackTransactionsReq struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackTransactionsReq) Reset()         { *m = PackTransactionsReq{} }
func (m *PackTransactionsReq) String() string { return proto.CompactTextString(m) }
func (*PackTransactionsReq) ProtoMessage()    {}
func (*PackTransactionsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{5}
}
func (m *PackTransactionsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackTransactionsReq.Unmarshal(m, b)
}
func (m *PackTransactionsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackTransactionsReq.Marshal(b, m, deterministic)
}
func (dst *PackTransactionsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackTransactionsReq.Merge(dst, src)
}
func (m *PackTransactionsReq) XXX_Size() int {
	return xxx_messageInfo_PackTransactionsReq.Size(m)
}
func (m *PackTransactionsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PackTransactionsReq.DiscardUnknown(m)
}

var xxx_messageInfo_PackTransactionsReq proto.InternalMessageInfo

func (m *PackTransactionsReq) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type PackTransactionsRes struct {
	TxHashes             [][]byte `protobuf:"bytes,1,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackTransactionsRes) Reset()         { *m = PackTransactionsRes{} }
func (m *PackTransactionsRes) String() string { return proto.CompactTextString(m) }
func (*PackTransactionsRes) ProtoMessage()    {}
func (*PackTransactionsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{6}
}
func (m *PackTransactionsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackTransactionsRes.Unmarshal(m, b)
}
func (m *PackTransactionsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackTransactionsRes.Marshal(b, m, deterministic)
}
func (dst *PackTransactionsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackTransactionsRes.Merge(dst, src)
}
func (m *PackTransactionsRes) XXX_Size() int {
	return xxx_messageInfo_PackTransactionsRes.Size(m)
}
func (m *PackTransactionsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PackTransactionsRes.DiscardUnknown(m)
}

var xxx_messageInfo_PackTransactionsRes proto.InternalMessageInfo

func (m *PackTransactionsRes) GetTxHashes() [][]byte {
	if m != nil {
		return m.TxHashes
	}
	return nil
}

type VerifyTxHashesReq struct {
	TxHashes             [][]byte `protobuf:"bytes,1,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTxHashesReq) Reset()         { *m = VerifyTxHashesReq{} }
func (m *VerifyTxHashesReq) String() string { return proto.CompactTextString(m) }
func (*VerifyTxHashesReq) ProtoMessage()    {}
func (*VerifyTxHashesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_79ed1b37631ad8ec, []int{7}
}
func (m *VerifyTxHashesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTxHashesReq.Unmarshal(m, b)
}
func (m *VerifyTxHashesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTxHashesReq.Marshal(b, m, deterministic)
}
func (dst *VerifyTxHashesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTxHashesReq.Merge(dst, src)
}
func (m *VerifyTxHashesReq) XXX_Size() int {
	return xxx_messageInfo_VerifyTxHashesReq.Size(m)
}
func (m *VerifyTxHashesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTxHashesReq.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTxHashesReq proto.InternalMessageInfo

func (m *VerifyTxHashesReq) GetTxHashes() [][]byte {
	if m != nil {
		return m.TxHashes
	}
	return nil
}

func init() {
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*UnverifiedTransaction)(nil), "UnverifiedTransaction")
	proto.RegisterType((*SignedTransaction)(nil), "SignedTransaction")
	proto.RegisterType((*SendTransactionReq)(nil), "SendTransactionReq")
	proto.RegisterType((*SendTransactionRes)(nil), "SendTransactionRes")
	proto.RegisterType((*PackTransactionsReq)(nil), "PackTransactionsReq")
	proto.RegisterType((*PackTransactionsRes)(nil), "PackTransactionsRes")
	proto.RegisterType((*VerifyTxHashesReq)(nil), "VerifyTxHashesReq")
	proto.RegisterEnum("Crypto", Crypto_name, Crypto_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	SendTransaction(ctx context.Context, in *SendTransactionReq, opts ...grpc.CallOption) (*SendTransactionRes, error)
	PackTransactions(ctx context.Context, in *PackTransactionsReq, opts ...grpc.CallOption) (*PackTransactionsRes, error)
	VerifyTxHashes(ctx context.Context, in *VerifyTxHashesReq, opts ...grpc.CallOption) (*Empty, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) SendTransaction(ctx context.Context, in *SendTransactionReq, opts ...grpc.CallOption) (*SendTransactionRes, error) {
	out := new(SendTransactionRes)
	err := c.cc.Invoke(ctx, "/Auth/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) PackTransactions(ctx context.Context, in *PackTransactionsReq, opts ...grpc.CallOption) (*PackTransactionsRes, error) {
	out := new(PackTransactionsRes)
	err := c.cc.Invoke(ctx, "/Auth/PackTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) VerifyTxHashes(ctx context.Context, in *VerifyTxHashesReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Auth/VerifyTxHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	SendTransaction(context.Context, *SendTransactionReq) (*SendTransactionRes, error)
	PackTransactions(context.Context, *PackTransactionsReq) (*PackTransactionsRes, error)
	VerifyTxHashes(context.Context, *VerifyTxHashesReq) (*Empty, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).SendTransaction(ctx, req.(*SendTransactionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_PackTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackTransactionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).PackTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/PackTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).PackTransactions(ctx, req.(*PackTransactionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_VerifyTxHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyTxHashesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).VerifyTxHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/VerifyTxHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).VerifyTxHashes(ctx, req.(*VerifyTxHashesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendTransaction",
			Handler:    _Auth_SendTransaction_Handler,
		},
		{
			MethodName: "PackTransactions",
			Handler:    _Auth_PackTransactions_Handler,
		},
		{
			MethodName: "VerifyTxHashes",
			Handler:    _Auth_VerifyTxHashes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_auth_79ed1b37631ad8ec) }

var fileDescriptor_auth_79ed1b37631ad8ec = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x9d, 0xd7, 0x2c, 0x69, 0x6f, 0x43, 0xd7, 0xde, 0x95, 0x12, 0x3a, 0x24, 0xaa, 0x3c, 0x55,
	0x95, 0x16, 0xa1, 0xf2, 0x8c, 0x34, 0x98, 0x26, 0x8d, 0x07, 0xa4, 0x29, 0xdd, 0xe0, 0x31, 0xf2,
	0x52, 0xd3, 0x58, 0x6b, 0xed, 0x2e, 0x76, 0x4a, 0xfb, 0x03, 0x3c, 0xf2, 0x3b, 0xfc, 0x08, 0x1f,
	0x84, 0xe2, 0x44, 0x5a, 0xba, 0x45, 0xf0, 0x96, 0x73, 0x7c, 0x7c, 0xee, 0x39, 0x37, 0x32, 0x00,
	0xcd, 0x74, 0x12, 0xac, 0x53, 0xa9, 0xe5, 0xd0, 0x8d, 0xe5, 0x6a, 0x25, 0x45, 0x81, 0xfc, 0x3f,
	0x04, 0xda, 0x37, 0x29, 0x15, 0x8a, 0xc6, 0x9a, 0x4b, 0x81, 0x1d, 0x38, 0xd4, 0xd2, 0x23, 0x23,
	0x32, 0x6e, 0x85, 0x87, 0x5a, 0x62, 0x1f, 0x8e, 0x84, 0x14, 0x31, 0xf3, 0x0e, 0x0d, 0x55, 0x80,
	0x9c, 0x7d, 0xc8, 0xa4, 0xa6, 0x5e, 0x63, 0x44, 0xc6, 0x56, 0x58, 0x00, 0x9c, 0x40, 0x6f, 0x43,
	0x97, 0x7c, 0x1e, 0x65, 0x42, 0xf3, 0x65, 0x74, 0xb7, 0x94, 0xf1, 0xbd, 0x67, 0x19, 0xc5, 0xb1,
	0x39, 0xb8, 0xcd, 0xf9, 0x4f, 0x39, 0x8d, 0x08, 0xd6, 0x9c, 0x6a, 0xea, 0x1d, 0x8d, 0xc8, 0xd8,
	0x0d, 0xcd, 0x77, 0xee, 0xba, 0xa1, 0xcb, 0x8c, 0x79, 0x76, 0xe1, 0x6a, 0x00, 0xbe, 0x86, 0x66,
	0x9c, 0x50, 0x2e, 0x22, 0x3e, 0xf7, 0x9c, 0x11, 0x19, 0xbf, 0x08, 0x1d, 0x83, 0x3f, 0xcf, 0xd1,
	0x03, 0x67, 0xc3, 0x52, 0xc5, 0xa5, 0xf0, 0x9a, 0xc5, 0x49, 0x09, 0xfd, 0x9f, 0x04, 0x5e, 0xde,
	0x8a, 0x0d, 0x4b, 0xf9, 0x77, 0xce, 0xe6, 0xd5, 0x82, 0x01, 0xb4, 0xf5, 0x23, 0x34, 0x4d, 0xdb,
	0x53, 0x37, 0xa8, 0x48, 0xc2, 0xaa, 0x00, 0xdf, 0x40, 0x4b, 0xf1, 0x85, 0xa0, 0x3a, 0x4b, 0x8b,
	0x25, 0xb8, 0xe1, 0x23, 0x81, 0x6f, 0xc1, 0x8e, 0xd3, 0xdd, 0x5a, 0x4b, 0xb3, 0x89, 0xce, 0xd4,
	0x09, 0x2e, 0x0c, 0x0c, 0x4b, 0xda, 0xff, 0x45, 0xa0, 0x37, 0xe3, 0x0b, 0xb1, 0x1f, 0xe2, 0x0a,
	0xfa, 0x95, 0x19, 0xd1, 0x0f, 0xae, 0x93, 0x48, 0xf1, 0x45, 0x99, 0x66, 0x10, 0xd4, 0x46, 0x0f,
	0xb1, 0x72, 0xe7, 0x1b, 0xd7, 0xc9, 0x8c, 0x2f, 0xf0, 0x15, 0x38, 0x7a, 0x1b, 0x25, 0x54, 0x25,
	0x65, 0x38, 0x5b, 0x6f, 0xaf, 0xa8, 0x4a, 0x70, 0x00, 0x76, 0x1e, 0x93, 0xa5, 0x26, 0x99, 0x1b,
	0x96, 0xc8, 0x3f, 0x07, 0x9c, 0x31, 0xb1, 0xe7, 0xcb, 0x1e, 0x70, 0x02, 0x56, 0x26, 0xf4, 0xf6,
	0x3f, 0x01, 0x8c, 0xc6, 0x3f, 0xab, 0x71, 0x50, 0xd5, 0x20, 0xa4, 0x1a, 0xc4, 0x3f, 0x83, 0x93,
	0x6b, 0x1a, 0xdf, 0x57, 0xe4, 0x2a, 0x9f, 0x38, 0x00, 0x3b, 0x61, 0x7c, 0x91, 0x68, 0x23, 0xb7,
	0xc2, 0x12, 0xf9, 0xd3, 0x3a, 0xb9, 0xc2, 0x53, 0x68, 0x95, 0xf6, 0x4c, 0x79, 0x64, 0xd4, 0x18,
	0xbb, 0x61, 0xb3, 0x18, 0xc0, 0x94, 0xff, 0x0e, 0x7a, 0x5f, 0xf3, 0xb8, 0xbb, 0x9b, 0x92, 0xc9,
	0x07, 0xfc, 0xeb, 0xc6, 0xe4, 0x14, 0xec, 0xe2, 0x47, 0x61, 0x13, 0xac, 0xd9, 0xe5, 0xc5, 0x75,
	0xf7, 0x00, 0x1d, 0x68, 0xcc, 0xbe, 0x4c, 0xbb, 0x64, 0xfa, 0x9b, 0x80, 0xf5, 0x31, 0xd3, 0x09,
	0x7e, 0x80, 0xe3, 0x27, 0x4d, 0xf1, 0x24, 0x78, 0xbe, 0xbd, 0x61, 0x0d, 0xa9, 0xfc, 0x03, 0x3c,
	0x87, 0xee, 0xd3, 0x2a, 0xd8, 0x0f, 0x6a, 0x96, 0x31, 0xac, 0x63, 0x73, 0x87, 0x00, 0x3a, 0xfb,
	0xc5, 0x10, 0x83, 0x67, 0x4d, 0x87, 0x76, 0x70, 0xb9, 0x5a, 0xeb, 0x9d, 0x7f, 0x70, 0x67, 0x9b,
	0x47, 0xfd, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0xa2, 0xd3, 0x22, 0xf0, 0x03, 0x00,
	0x00,
}
